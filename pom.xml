<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>data-example</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <modules>
        <module>hive-example</module>
        <module>presto-example</module>
        <module>storm-example</module>
        <module>flink-example</module>
        <module>common-example</module>
        <module>hbase-example</module>
        <module>zookeeper-example</module>
        <module>kafka-example</module>
        <module>calcite-example</module>
        <module>clickhouse-example</module>
        <module>debezium-example</module>
        <module>flink-connector-redis</module>
        <module>flink-example-1.12</module>
        <module>spark-example-3.1</module>
        <module>flink-example-1.14</module>
        <module>flink-example-1.9</module>
        <module>flink-example-1.11</module>
        <module>redis-example</module>
        <module>hadoop-example</module>
        <module>flink-example-1.15</module>
        <module>spark-example-2.2</module>
        <module>antlr-example</module>
        <module>sql-parse</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <maven.version>3.3</maven.version>
        <common.example.version>1.0</common.example.version>
        <storm.version>1.1.2</storm.version>
        <common.version>3.5</common.version>
        <jcommander.version>1.78</jcommander.version>
        <presto.version>0.86</presto.version>
        <hive.version>2.3.4</hive.version>
        <zookeeper.version>3.4.12</zookeeper.version>
        <hbase.version>2.1.6</hbase.version>
        <scala.binary.version>2.11</scala.binary.version>
        <scala.212.version>2.12</scala.212.version>
        <flink.version>1.13.5</flink.version>
        <log4j.version>2.17.1</log4j.version>
        <kafka.version>2.5.0</kafka.version>
        <junit.version>4.12</junit.version>
        <guava.version>23.0</guava.version>
        <gson.version>2.8.5</gson.version>
        <hadoop.version>2.7.7</hadoop.version>
        <calcite.version>1.32.0</calcite.version>
        <clickhouse.version>0.3.0</clickhouse.version>
        <mysql.version>8.0.22</mysql.version>
        <debezium.version>1.6.1.Final</debezium.version>
        <spark.version>3.1.3</spark.version>
        <commons.compress>1.21</commons.compress>
        <redis.version>4.0.1</redis.version>
        <geohash.version>1.4.0</geohash.version>
        <joda.version>2.10.14</joda.version>
        <roaringBitmap.version>0.9.23</roaringBitmap.version>
        <common-cli.version>1.5.0</common-cli.version>
        <antlr.version>4.9.2</antlr.version>
        <velocity.version>2.3</velocity.version>
        <csv.version>3.8</csv.version>
        <au.csv.version>2.4</au.csv.version>
        <druid.version>1.2.20</druid.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- 公共库 -->
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>common-example</artifactId>
                <version>${common.example.version}</version>
            </dependency>

            <!-- storm -->
            <dependency>
                <groupId>org.apache.storm</groupId>
                <artifactId>storm-core</artifactId>
                <version>${storm.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.storm</groupId>
                <artifactId>storm-redis</artifactId>
                <version>${storm.version}</version>
            </dependency>

            <!-- presto -->
            <dependency>
                <groupId>com.facebook.presto</groupId>
                <artifactId>presto-jdbc</artifactId>
                <version>${presto.version}</version>
            </dependency>

            <!-- hive -->
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-jdbc</artifactId>
                <version>${hive.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-exec</artifactId>
                <version>${hive.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- zookeeper -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>

            <!-- hbase -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-shaded-client</artifactId>
                <version>${hbase.version}</version>
            </dependency>

            <!-- Flink Streaming -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Flink Table & SQL -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Flink Connector -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-jdbc_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-hive_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--<dependency>-->
                <!--<groupId>org.apache.bahir</groupId>-->
                <!--<artifactId>flink-connector-redis_2.11</artifactId>-->
                <!--<version>1.1.0</version>-->
            <!--</dependency>-->

            <!-- Flink rocksdb stateBackend -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- Flink state processor -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-state-processor-api_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- Flink Format -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
                <!--<scope>test</scope>-->
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-csv</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- Flink Metric -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-metrics-dropwizard</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- Flink 本地运行 -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Flink 本地运行 WebUI -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-runtime-web_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- flink 单元测试 -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
                <classifier>tests</classifier>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-test-utils_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-runtime_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
                <classifier>tests</classifier>
            </dependency>

            <!-- Flink SQL 解析 -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-sql-parser</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- Spark -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.212.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.212.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.212.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-0-8_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-0-10_${scala.212.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql-kafka-0-10_${scala.212.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <!-- Hadoop -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-hdfs</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <!-- calcite -->
            <dependency>
                <groupId>org.apache.calcite</groupId>
                <artifactId>calcite-core</artifactId>
                <version>${calcite.version}</version>
            </dependency>

            <!-- Antlr -->
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>${antlr.version}</version>
            </dependency>

            <!-- ClickHouse -->
            <!--<dependency>-->
                <!--<groupId>ru.yandex.clickhouse</groupId>-->
                <!--<artifactId>clickhouse-jdbc</artifactId>-->
                <!--<version>${clickhouse.version}</version>-->
            <!--</dependency>-->

            <!-- MySQL -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!--debezium  -->
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-api</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-embedded</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-connector-mysql</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <!-- Redis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${redis.version}</version>
            </dependency>

            <!-- RoaringBitmap -->
            <dependency>
                <groupId>org.roaringbitmap</groupId>
                <artifactId>RoaringBitmap</artifactId>
                <version>${roaringBitmap.version}</version>
            </dependency>

            <!-- SQL解析&连接池 阿里 Druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- commons lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${common.version}</version>
            </dependency>

            <!-- commons compress Flink CSV 时使用 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons.compress}</version>
            </dependency>

            <!--commons cli -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${common-cli.version}</version>
            </dependency>

            <!-- jcommander -->
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>

            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- GeoHash -->
            <dependency>
                <groupId>ch.hsr</groupId>
                <artifactId>geohash</artifactId>
                <version>${geohash.version}</version>
            </dependency>

            <!-- Joda -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <!-- velocity -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <!-- OpenCsv -->
            <dependency>
                <groupId>com.opencsv</groupId>
                <artifactId>opencsv</artifactId>
                <version>${csv.version}</version>
            </dependency>

            <!-- OpenCsv 老版本 推荐迁移到 com.opencsv -->
            <dependency>
                <groupId>au.com.bytecode</groupId>
                <artifactId>opencsv</artifactId>
                <version>${au.csv.version}</version>
            </dependency>

            <!-- Mapstruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- log4j -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
                <!--<scope>runtime</scope>-->
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
                <!--<scope>runtime</scope>-->
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
                <!--<scope>runtime</scope>-->
            </dependency>

            <!-- junit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven 编译插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>

                <!-- Maven Antlr 插件 -->
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-maven-plugin</artifactId>
                    <version>${antlr.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>